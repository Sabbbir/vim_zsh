# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel10k/powerlevel10k"
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh


# User configuration
export PATH="/usr/local/miniconda3/bin:$PATH"

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"
#

# Add CUDA and TensorRT paths to PATH and CUDA_HOME
export PATH="/usr/local/cuda-11.8/bin:$PATH"
export CUDA_HOME="/usr/local/cuda-11.8"

# Add CUDA, cuDNN, and TensorRT paths to LD_LIBRARY_PATH

export LD_LIBRARY_PATH="/usr/local/cuda-11.8/lib64:/home/druglord/.local/lib/python3.11/site-packages/nvidia/cudnn:/usr/local/TensorRT-8.6.1.6/lib:$LD_LIBRARY_PATH"

export LD_LIBRARY_PATH="/usr/local/cuda-11.8/lib64:$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="/home/druglord/.local/lib/python3.11/site-packages/nvidia/cudnn:$LD_LIBRARY_PATH"

# Add cuDNN path to CUDNN_PATH
export CUDNN_PATH="/home/druglord/.conda/envs/tf/lib/python3.9/site-packages/nvidia"

# Update LD_LIBRARY_PATH with CUDNN_PATH and TensorRT paths
export LD_LIBRARY_PATH="$CUDNN_PATH:$LD_LIBRARY_PATH:/usr/local/TensorRT-8.6.1.6/lib"

# Tensor-RT from tar files
# https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html#installing-tar

# tar -xvf tensorrt...
# Tensor-RT add var
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:"/usr/local/TensorRT-8.6.1.6/lib"

# none, lean and dispatch
# python3 -m pip install tensorrt-*-cp3x-none-linux_x86_64.whl
# python3 -m pip install tensorrt_lean-*-cp3x-none-linux_x86_64.whl
# python3 -m pip install tensorrt_dispatch-*-cp3x-none-linux_x86_64.whl

#tensorrt/uff
# python3 -m pip install uff-0.6.9-py2.py3-none-any.whl

#tensorrt/graphsurgeon
# python3 -m pip install graphsurgeon-0.4.6-py2.py3-none-any.whl

#tensorrt/onnx_graphsurgeon
# python3 -m pip install onnx_graphsurgeon-0.3.12-py2.py3-none-any.whl 

#Ignore warning
export TF_CPP_MIN_LOG_LEVEL=2

# ML/AI/DL Environment setup

#Requirement

# Tensorflow		 Python		 Compiler	CuDNN	 CUDA
#tensorflow-2.13.0	3.8-3.11	Clang 16.0.0	 8.6	 11.8 
#
#create conda envirnment
# conda create --name tf python=3.11.5
# conda activate tf

# cuda-toolkit(11.8) => 
# wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda-repo-fedora35-11-8-local-11.8.0_520.61.05-1.x86_64.rpm
# sudo rpm -i cuda-repo-fedora35-11-8-local-11.8.0_520.61.05-1.x86_64.rpm 
# sudo dnf remove all
# sudo dnf install cuda

# cudnn => tar
# mv cudnn* => cudnn

#After unzipping cudnn, type these commands
# sudo cp cudnn/include/cudnn*.h /usr/local/cuda-11.8/include
# sudo cp -P cudnn/lib/libcudnn* /usr/local/cuda-11.8/lib64
# sudo chmod a+r /usr/local/cuda-11.8/include/cudnn*.h /usr/local/cuda-11.8/lib64/libcudnn*

# ll /usr/local/cuda-11.8/include/cudn*.h
# ll /usr/local/cuda-11.8/lib64/
# ll /usr/local/cuda-11.8/lib64/libcudnn*


# Installing Tensor-RT from tar files
# https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html#installing-tar

# tar -xvf tensorrt...
# Before installing Tensor-RT, add to var
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:"/usr/local/TensorRT-8.6.1.6/lib"

# none, lean and dispatch install
# cd tensorrt/python
# python3 -m pip install tensorrt-*-cp3x-none-linux_x86_64.whl
# python3 -m pip install tensorrt_lean-*-cp3x-none-linux_x86_64.whl
# python3 -m pip install tensorrt_dispatch-*-cp3x-none-linux_x86_64.whl

# cd tensorrt/uff
# python3 -m pip install uff-0.6.9-py2.py3-none-any.whl

# cd tensorrt/graphsurgeon
# python3 -m pip install graphsurgeon-0.4.6-py2.py3-none-any.whl

# cd tensorrt/onnx_graphsurgeon
# python3 -m pip install onnx_graphsurgeon-0.3.12-py2.py3-none-any.whl 

#Ignore warning
export TF_CPP_MIN_LOG_LEVEL=2

#install tensorflow(cudnn 8.6 with tf 2.13.0)
#pip install tensorflow==2.13.0

#install pytorch
#pip install pytorch torchvision torchaudio


# Make the changes take effect
#source ~/.zshrc


# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
source ~/.themes/powerlevel10k/powerlevel10k.zsh-theme
alias nvidia-smi="watch -n1 nvidia-smi"
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
source /home/druglord/.themes/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh



# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/etc/profile.d/conda.sh" ]; then
        . "/usr/etc/profile.d/conda.sh"
    else
        export PATH="/usr/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

export PATH="$PATH:/home/druglord/.local/bin"
alias cdd="conda deactivate"
alias ctf"=conda activate tf"


